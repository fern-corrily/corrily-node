/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { CorrilyApi } from "@fern-api/corrily";
import * as core from "../../../core";

export const Request: core.schemas.Schema<serializers.charge.create.Request.Raw, CorrilyApi.CreateChargeRequest> =
  core.schemas.object({
    amount: core.schemas.number(),
    amountRefunded: core.schemas.property("amount_refunded", core.schemas.number().optional()),
    created: core.schemas.number(),
    currency: core.schemas.lazy(async () => (await import("../..")).Currency),
    country: core.schemas.string().optional(),
    origin: core.schemas.lazy(async () => (await import("../..")).Integration),
    originId: core.schemas.property(
      "origin_id",
      core.schemas.lazy(async () => (await import("../..")).OriginId)
    ),
    product: core.schemas.string(),
    status: core.schemas.lazy(async () => (await import("../..")).ChargeStatus).optional(),
    userId: core.schemas.property(
      "user_id",
      core.schemas.lazy(async () => (await import("../..")).UserId)
    ),
    metadata: core.schemas.unknown().optional(),
  });

export declare namespace Request {
  interface Raw {
    amount: number;
    amount_refunded?: number | null;
    created: number;
    currency: serializers.Currency.Raw;
    country?: string | null;
    origin: serializers.Integration.Raw;
    origin_id: serializers.OriginId.Raw;
    product: string;
    status?: serializers.ChargeStatus.Raw | null;
    user_id: serializers.UserId.Raw;
    metadata?: unknown | null;
  }
}
