/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { CorrilyApi } from "@fern-api/corrily";
import * as core from "../../../../../core";

export const CreateChargeRequest: core.serialization.Schema<
    serializers.CreateChargeRequest.Raw,
    CorrilyApi.CreateChargeRequest
> = core.serialization.object({
    amount: core.serialization.number(),
    amountRefunded: core.serialization.property("amount_refunded", core.serialization.number().optional()),
    created: core.serialization.number(),
    currency: core.serialization.lazy(async () => (await import("../../../..")).Currency),
    country: core.serialization.string().optional(),
    origin: core.serialization.lazy(async () => (await import("../../../..")).Integration),
    originId: core.serialization.property(
        "origin_id",
        core.serialization.lazy(async () => (await import("../../../..")).OriginId)
    ),
    product: core.serialization.string(),
    status: core.serialization.lazy(async () => (await import("../../../..")).ChargeStatus).optional(),
    userId: core.serialization.property(
        "user_id",
        core.serialization.lazy(async () => (await import("../../../..")).UserId)
    ),
    metadata: core.serialization.unknown().optional(),
});

export declare namespace CreateChargeRequest {
    interface Raw {
        amount: number;
        amount_refunded?: number | null;
        created: number;
        currency: serializers.Currency.Raw;
        country?: string | null;
        origin: serializers.Integration.Raw;
        origin_id: serializers.OriginId.Raw;
        product: string;
        status?: serializers.ChargeStatus.Raw | null;
        user_id: serializers.UserId.Raw;
        metadata?: unknown | null;
    }
}
