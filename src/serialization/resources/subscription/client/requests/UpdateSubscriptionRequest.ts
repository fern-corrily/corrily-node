/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { CorrilyApi } from "@fern-api/corrily";
import * as core from "../../../../../core";

export const UpdateSubscriptionRequest: core.serialization.Schema<
    serializers.UpdateSubscriptionRequest.Raw,
    CorrilyApi.UpdateSubscriptionRequest
> = core.serialization.object({
    amount: core.serialization.number().optional(),
    cancelAt: core.serialization.property("cancel_at", core.serialization.number().optional()),
    canceledAt: core.serialization.property("canceled_at", core.serialization.number().optional()),
    created: core.serialization.number().optional(),
    currency: core.serialization.lazy(async () => (await import("../../../..")).Currency).optional(),
    status: core.serialization.lazy(async () => (await import("../../../..")).SubscriptionStatus).optional(),
    trialStart: core.serialization.property("trial_start", core.serialization.number().optional()),
    trialEnd: core.serialization.property("trial_end", core.serialization.number().optional()),
});

export declare namespace UpdateSubscriptionRequest {
    interface Raw {
        amount?: number | null;
        cancel_at?: number | null;
        canceled_at?: number | null;
        created?: number | null;
        currency?: serializers.Currency.Raw | null;
        status?: serializers.SubscriptionStatus.Raw | null;
        trial_start?: number | null;
        trial_end?: number | null;
    }
}
