/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { CorrilyApi } from "@fern-api/corrily";
import * as core from "../../../../../core";

export const CreateProductRequest: core.serialization.Schema<
    serializers.CreateProductRequest.Raw,
    CorrilyApi.CreateProductRequest
> = core.serialization.object({
    apiId: core.serialization.property(
        "api_id",
        core.serialization.lazy(async () => (await import("../../../..")).ApiId)
    ),
    name: core.serialization.string(),
    basePx: core.serialization.property("base_px", core.serialization.number()),
    interval: core.serialization.lazy(async () => (await import("../../../..")).Interval),
    intervalCount: core.serialization.property("interval_count", core.serialization.number()),
    countryPrices: core.serialization.property(
        "country_prices",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../../..")).CountryPrice))
            .optional()
    ),
    integrations: core.serialization
        .list(core.serialization.lazy(async () => (await import("../../../..")).ProductIntegration))
        .optional(),
});

export declare namespace CreateProductRequest {
    interface Raw {
        api_id: serializers.ApiId.Raw;
        name: string;
        base_px: number;
        interval: serializers.Interval.Raw;
        interval_count: number;
        country_prices?: serializers.CountryPrice.Raw[] | null;
        integrations?: serializers.ProductIntegration.Raw[] | null;
    }
}
