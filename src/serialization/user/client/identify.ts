/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { CorrilyApi } from "@fern-api/corrily";
import * as core from "../../../core";

export const Request: core.schemas.Schema<serializers.user.identify.Request.Raw, CorrilyApi.IdentifyCallRequest> =
  core.schemas.object({
    userId: core.schemas.property(
      "user_id",
      core.schemas.lazy(async () => (await import("../..")).UserId)
    ),
    ip: core.schemas.string().optional(),
    features: core.schemas.record(core.schemas.unknown(), core.schemas.unknown()).optional(),
    appleOriginalTransactionId: core.schemas.property(
      "apple_original_transaction_id",
      core.schemas.string().optional()
    ),
    googlePurchaseToken: core.schemas.property("google_purchase_token", core.schemas.string().optional()),
  });

export declare namespace Request {
  interface Raw {
    user_id: serializers.UserId.Raw;
    ip?: string | null;
    features?: Record<unknown, unknown> | null;
    apple_original_transaction_id?: string | null;
    google_purchase_token?: string | null;
  }
}

export const Response: core.schemas.Schema<serializers.user.identify.Response.Raw, CorrilyApi.IdentifyCallResponse> =
  core.schemas.lazyObject(async () => (await import("../..")).IdentifyCallResponse);

export declare namespace Response {
  type Raw = serializers.IdentifyCallResponse.Raw;
}
