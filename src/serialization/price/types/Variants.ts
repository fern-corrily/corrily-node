/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { CorrilyApi } from "@fern-api/corrily";
import * as core from "../../../core";

export const Variants: core.schemas.ObjectSchema<serializers.Variants.Raw, CorrilyApi.Variants> = core.schemas.object({
  experimentedOn: core.schemas.property("experimented_on", core.schemas.boolean().optional()),
  experimentId: core.schemas.property("experiment_id", core.schemas.number().optional()),
  experimentType: core.schemas.property(
    "experiment_type",
    core.schemas.lazy(async () => (await import("../..")).ExperimentType).optional()
  ),
  productsToSelect: core.schemas.property("products_to_select", core.schemas.list(core.schemas.string()).optional()),
  treatmentGroup: core.schemas.property(
    "treatment_group",
    core.schemas.lazy(async () => (await import("../..")).TreatmentGroup).optional()
  ),
});

export declare namespace Variants {
  interface Raw {
    experimented_on?: boolean | null;
    experiment_id?: number | null;
    experiment_type?: serializers.ExperimentType.Raw | null;
    products_to_select?: string[] | null;
    treatment_group?: serializers.TreatmentGroup.Raw | null;
  }
}
