/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../..";
import { CorrilyApi } from "@fern-api/corrily";
import * as core from "../../../core";

export const Product: core.schemas.ObjectSchema<serializers.Product.Raw, CorrilyApi.Product> = core.schemas.object({
  price: core.schemas.number().optional(),
  priceUsd: core.schemas.property("price_usd", core.schemas.number().optional()),
  interval: core.schemas.lazy(async () => (await import("../..")).Interval).optional(),
  intervalCount: core.schemas.property("interval_count", core.schemas.number().optional()),
  display: core.schemas.lazyObject(async () => (await import("../..")).PriceDisplay).optional(),
  integrations: core.schemas
    .record(
      core.schemas.lazy(async () => (await import("../..")).Integration),
      core.schemas.lazyObject(async () => (await import("../..")).Gateway)
    )
    .optional(),
  coupon: core.schemas.unknown().optional(),
});

export declare namespace Product {
  interface Raw {
    price?: number | null;
    price_usd?: number | null;
    interval?: serializers.Interval.Raw | null;
    interval_count?: number | null;
    display?: serializers.PriceDisplay.Raw | null;
    integrations?: Record<serializers.Integration.Raw, serializers.Gateway.Raw> | null;
    coupon?: unknown | null;
  }
}
