/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../environments";
import * as core from "../../../core";
import { CorrilyApi } from "@fern-api/corrily";
import urlJoin from "url-join";
import * as serializers from "../../../serialization";

export declare namespace Client {
  interface Options {
    environment?: environments.CorrilyApiEnvironment | string;
    token?: core.Supplier<core.BearerToken>;
  }
}

export class Client {
  constructor(private readonly options: Client.Options) {}

  public async calculate(request?: CorrilyApi.CalculatePriceRequest): Promise<CorrilyApi.price.calculate.Response> {
    const _response = await core.fetcher({
      url: urlJoin(this.options.environment ?? environments.CorrilyApiEnvironment.Production, "/prices/"),
      method: "POST",
      headers: {
        Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
      },
      body: await serializers.price.calculate.Request.json({
        userId: request?.userId,
        products: request?.products,
        ip: request?.ip,
        getIpFromRequest: request?.getIpFromRequest,
        country: request?.country,
        features: request?.features,
        integrations: request?.integrations,
        currency: request?.currency,
        override: request?.override,
        overrideCurrency: request?.overrideCurrency,
        runExperiment: request?.runExperiment,
        coupons: request?.coupons,
      }),
    });
    if (_response.ok) {
      return {
        ok: true,
        body: await serializers.price.calculate.Response.parse(
          _response.body as serializers.price.calculate.Response.Raw
        ),
      };
    }

    return {
      ok: false,
      error: CorrilyApi.price.calculate.Error._unknown(_response.error),
    };
  }
}
