/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../environments";
import * as core from "../../../core";
import { CorrilyApi } from "@fern-api/corrily";
import urlJoin from "url-join";
import * as serializers from "../../../serialization";

export declare namespace Client {
  interface Options {
    environment?: environments.CorrilyApiEnvironment | string;
    token?: core.Supplier<core.BearerToken>;
  }
}

export class Client {
  constructor(private readonly options: Client.Options) {}

  public async create(request: CorrilyApi.CreateProductRequest): Promise<CorrilyApi.product.create.Response> {
    const _response = await core.fetcher({
      url: urlJoin(this.options.environment ?? environments.CorrilyApiEnvironment.Production, "/products/"),
      method: "POST",
      headers: {
        Authorization: core.BearerToken.toAuthorizationHeader(await core.Supplier.get(this.options.token)),
      },
      body: await serializers.product.create.Request.json({
        apiId: request.apiId,
        name: request.name,
        basePx: request.basePx,
        interval: request.interval,
        intervalCount: request.intervalCount,
        countryPrices: request.countryPrices,
        integrations: request.integrations,
      }),
    });
    if (_response.ok) {
      return {
        ok: true,
        body: undefined,
      };
    }

    return {
      ok: false,
      error: CorrilyApi.product.create.Error._unknown(_response.error),
    };
  }
}
